name: Deploy Apps

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG (SHA + Run Number)
        run: |
          echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV
          echo "IMAGE_TAG=${SHORT_SHA}-r${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build monorepo artifacts
        run: docker build -f build/Dockerfile.build -t topobre-builder .

      - name: Build and push API image
        run: |
          docker buildx build \
            --file apps/api/Dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/topobre-api:${{ env.IMAGE_TAG }} \
            --tag ghcr.io/${{ github.repository_owner }}/topobre-api:latest \
            --platform linux/amd64
            --push \
            .

      - name: Build and push Web image
        run: |
          docker buildx build \
            --file apps/web/Dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/topobre-web:${{ env.IMAGE_TAG }} \
            --tag ghcr.io/${{ github.repository_owner }}/topobre-web:latest \
            --platform linux/amd64
            --push \
            .

      - name: Build and push Worker image
        run: |
          docker buildx build \
            --file apps/worker/Dockerfile \
            --tag ghcr.io/${{ github.repository_owner }}/topobre-worker:${{ env.IMAGE_TAG }} \
            --tag ghcr.io/${{ github.repository_owner }}/topobre-worker:latest \
            --platform linux/amd64
            --push \
            .

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pull latest images
        run: docker compose -f docker-compose.apps.yml pull

      - name: Stop containers and clean volumes
        run: docker compose -f docker-compose.apps.yml down -v

      - name: Rodar script de deploy
        run: bash build/scripts/deploy.sh
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
          NODE_ENV: ${{ vars.NODE_ENV }}
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          HOST: ${{ secrets.HOST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: ${{ secrets.OTEL_EXPORTER_OTLP_TRACES_ENDPOINT }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGHOST: ${{ secrets.PGHOST }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGUSER: ${{ secrets.PGUSER }}
          PORT: ${{ secrets.PORT }}
          UPSTASH_REDIS_URL: ${{ secrets.UPSTASH_REDIS_URL }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}