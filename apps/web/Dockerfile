# ========= ðŸš§ Build Stage =========
FROM node:18-slim AS builder

WORKDIR /app

# Instalar dependÃªncias bÃ¡sicas
RUN apt-get update && apt-get install -y \
    openssl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Instalar pnpm
RUN npm install -g pnpm

# Copiar dependÃªncias da raiz do monorepo
COPY ../../pnpm-lock.yaml ../../package.json ./
COPY ../../apps/web ./apps/web
COPY ../../packages ./packages
COPY ../../tsconfig.json ./

# Instalar dependÃªncias com os workspaces
RUN pnpm install

# Definir variÃ¡vel pÃºblica do Next.js
ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL

# Gerar build da web
RUN pnpm build:web


# ========= âœ… Production Stage =========
FROM node:18-slim AS runner

WORKDIR /app

# Instalar dependÃªncias bÃ¡sicas
RUN apt-get update && apt-get install -y \
    openssl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Instalar pnpm
RUN npm install -g pnpm

# Copiar apenas os artefatos necessÃ¡rios
COPY --from=builder /app/apps/web/package.json ./apps/web/package.json
COPY --from=builder /app/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/apps/web/.next ./apps/web/.next
COPY --from=builder /app/apps/web/public ./apps/web/public
COPY --from=builder /app/apps/web/next.config.js ./apps/web/next.config.js

# Definir variÃ¡veis de ambiente
ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL

# Porta do Next.js
EXPOSE 3000

# Entrar na pasta correta
WORKDIR /app/apps/web

# Rodar em produÃ§Ã£o
CMD ["pnpm", "start:web"]
