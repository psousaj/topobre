name: Deploy Apps

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG (SHA + Run Number)
        id: set_tag
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          IMAGE_TAG="${SHORT_SHA}-${GITHUB_RUN_NUMBER}"
          echo "IMAGE_TAG=${IMAGE_TAG}"   >> $GITHUB_ENV
          echo "image_tag=${IMAGE_TAG}"   >> $GITHUB_OUTPUT 

      - name: Debug image tag
        run: |
          echo "IMAGE_TAG: $IMAGE_TAG"

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build monorepo artifacts
        run: docker build -f build/Dockerfile.build -t topobre-builder .

      - name: Build and push all apps with Bake
        run: |
          docker buildx bake --push \
            --set api.tags=ghcr.io/${{ github.repository_owner }}/topobre-api:latest \
            --set api.tags+=ghcr.io/${{ github.repository_owner }}/topobre-api:${{ env.IMAGE_TAG }} \
            --set web.tags=ghcr.io/${{ github.repository_owner }}/topobre-web:latest \
            --set web.tags+=ghcr.io/${{ github.repository_owner }}/topobre-web:${{ env.IMAGE_TAG }} \
            --set worker.tags=ghcr.io/${{ github.repository_owner }}/topobre-worker:latest \
            --set worker.tags+=ghcr.io/${{ github.repository_owner }}/topobre-worker:${{ env.IMAGE_TAG }} \
            --set api.platform=linux/amd64 \
            --set web.platform=linux/amd64 \
            --set worker.platform=linux/amd64 \
            --file build/docker-bake.hcl

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Rodar script de deploy
        run: |
          chmod +x build/scripts/deploy.sh
          build/scripts/deploy.sh
        env:
          IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
          NODE_ENV: ${{ vars.NODE_ENV }}
          APPDATA: ${{ vars.APPDATA }}
          API_HOST: ${{ secrets.API_HOST }}
          API_PORT: ${{ secrets.API_PORT }}
          WEB_PORT: ${{ secrets.WEB_PORT }}
          PGHOST: ${{ secrets.PGHOST }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
          API_COOKIE_SECRET: ${{ secrets.API_COOKIE_SECRET }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          PROMETHEUS_PORT: ${{ secrets.PROMETHEUS_PORT }}
          OTEL_EXPORTER_OTLP_TRACES: ${{ secrets.OTEL_EXPORTER_OTLP_TRACES }}
          LOKI_ENDPOINT: ${{ secrets.LOKI_ENDPOINT }}
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}