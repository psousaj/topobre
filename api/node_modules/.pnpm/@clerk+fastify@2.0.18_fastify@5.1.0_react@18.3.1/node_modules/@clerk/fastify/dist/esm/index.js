export*from"@clerk/backend";import g from"fastify-plugin";var c=["onRequest","preHandler"];import{AuthStatus as O}from"@clerk/backend/internal";import{createClerkClient as _}from"@clerk/backend";import{constants as A}from"@clerk/backend/internal";import{apiUrlFromPublishableKey as C}from"@clerk/shared/apiUrlFromPublishableKey";var f=process.env.CLERK_API_VERSION||"v1",n=process.env.CLERK_SECRET_KEY||"",a=process.env.CLERK_PUBLISHABLE_KEY||"",u=process.env.CLERK_API_URL||C(a),l=process.env.CLERK_JWT_KEY||"",m={name:"@clerk/fastify",version:"2.0.18",environment:"production"},{Cookies:w,Headers:y}=A;var p=_({secretKey:n,apiUrl:u,apiVersion:f,jwtKey:l,userAgent:"@clerk/fastify@2.0.18",sdkMetadata:m});var h=e=>{let t=new Headers(Object.keys(e.headers).reduce((r,o)=>{let i=e.headers[o];return i&&(typeof i=="string"?r.set(o,i):r.set(o,i.join(","))),r},new Headers)),s=new URL(e.url||"",`${e.protocol}://clerk-dummy`);return new Request(s,{method:e.method,headers:t})};var E=e=>async(t,s)=>{let r=h(t),o=await p.authenticateRequest(r,{...e,secretKey:e.secretKey||n,publishableKey:e.publishableKey||a});if(o.headers.forEach((R,k)=>s.header(k,R)),o.headers.get(y.Location))return s.code(307).send();if(o.status===O.Handshake)throw new Error("Clerk: handshake status without redirect");t.auth=o.toAuth()};var F=(e,t,s)=>{e.decorateRequest("auth",null);let r=t.hookName||"preHandler";if(!c.includes(r))throw new Error(`Unsupported hookName: ${r}`);e.addHook(r,E(t)),s()},x=g(F,{name:"@clerk/fastify",fastify:"5.x"});var L=e=>`\u{1F512} Clerk: ${e.trim()}

For more info, check out the docs: https://clerk.com/docs,
or come say hi in our discord server: https://clerk.com/discord
`,d=L(`The "clerkPlugin" should be registered before using the "getAuth".
Example:

import { clerkPlugin } from '@clerk/fastify';

const server: FastifyInstance = Fastify({ logger: true });
server.register(clerkPlugin);
`);var P=e=>{let t=e;if(!t.auth)throw new Error(d);return t.auth};export{p as clerkClient,x as clerkPlugin,P as getAuth};
//# sourceMappingURL=index.js.map